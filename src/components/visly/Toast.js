// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* tslint:disable */
/* eslint-disable */
import "./textstyles/fonts.css";
import "./reset.css";
import "./Toast.css";
import React, { createContext, useContext } from "react";
import {
  exists,
  findSetVariantProps,
  makeCompositeDefaultProps,
} from "./_internal_utils";
import { RootPrimitive, TextPrimitive } from "./_internal_primitives";
import * as icons from "./icons";
import { default as IconButton, IconButtonContext } from "./IconButton";

const styles = [
  {
    type: "default",
    layers: {
      CVMPCzqNX1: {
        none: {
          text: "Here is a notification",
        },
      },
    },
  },
  {
    type: "boolean",
    propName: "small",
    layers: {},
  },
  {
    type: "boolean",
    propName: "dark",
    layers: {},
  },
];

const defaultPropValues = [
  {
    type: "default",
    layers: {
      "6DxeM4Djfn": {
        none: {
          icon: icons.close,
          kind: "quiet",
        },
      },
    },
  },
  {
    type: "boolean",
    propName: "small",
    layers: {
      "6DxeM4Djfn": {},
    },
  },
  {
    type: "boolean",
    propName: "dark",
    layers: {
      "6DxeM4Djfn": {
        none: {
          dark: true,
        },
      },
    },
  },
];

const variantPropTypes = [
  {
    type: "boolean",
    propName: "small",
  },
  {
    type: "boolean",
    propName: "dark",
  },
];

export const ToastContext = createContext(null);

function Toast(_props) {
  const defaults = useContext(ToastContext);
  const props = { ...defaults, ..._props };
  const activeVariants = findSetVariantProps(variantPropTypes, props);
  const getCompositeDefaultProps = makeCompositeDefaultProps(
    defaultPropValues,
    activeVariants
  );
  return (
    <RootPrimitive
      {...props}
      key="2kuU7TGfT9"
      addSpacing={true}
      internal={{
        projectId: "7X7HTLRqyD",
        styles: styles,
        layerId: "2kuU7TGfT9",
        scope: "YGrGLuD2iE",
        activeVariants: activeVariants,
      }}
    >
      {(getStyle) => [
        <TextPrimitive
          id={"Text_CVMPCzqNX1"}
          className={
            "__visly_reset_7X7HTLRqyD __visly_scope_YGrGLuD2iE_CVMPCzqNX1"
          }
          key={"CVMPCzqNX1"}
          text={
            exists(props.text) ? props.text : getStyle("CVMPCzqNX1", "text")
          }
          element={getStyle("CVMPCzqNX1", "htmlElement")}
        />,
        props.IconButton === undefined ? (
          <IconButton
            key={"6DxeM4Djfn"}
            {...getCompositeDefaultProps("6DxeM4Djfn")}
            id="IconButton_6DxeM4Djfn"
            className="__visly_reset_7X7HTLRqyD __visly_scope_YGrGLuD2iE_6DxeM4Djfn"
          />
        ) : (
          <IconButtonContext.Provider
            key="6DxeM4Djfn-provider"
            value={{
              key: "6DxeM4Djfn",
              id: "IconButton_6DxeM4Djfn",
              className:
                "__visly_reset_7X7HTLRqyD __visly_scope_YGrGLuD2iE_6DxeM4Djfn",
              ...getCompositeDefaultProps("6DxeM4Djfn"),
            }}
          >
            {props.IconButton}
          </IconButtonContext.Provider>
        ),
      ]}
    </RootPrimitive>
  );
}

Toast.IconButton = IconButton;
Toast.__variants = [
  {
    name: "small",
    type: "variant",
  },
  {
    name: "dark",
    type: "variant",
  },
];

export default Toast;
