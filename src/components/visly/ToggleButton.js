// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* tslint:disable */
/* eslint-disable */
import "./textstyles/fonts.css";
import "./reset.css";
import "./ToggleButton.css";
import React, { createContext, useContext } from "react";
import {
  exists,
  findSetVariantProps,
  makeCompositeDefaultProps,
} from "./_internal_utils";
import { TextPrimitive } from "./_internal_primitives";
import { ToggleButtonRoot } from "./_internal_togglebutton";

const styles = [
  {
    type: "default",
    layers: {
      Qv4PXEzSwy: {
        none: {
          text: "Button",
        },
      },
    },
  },
  {
    type: "boolean",
    propName: "checked",
    layers: {},
  },
];

const defaultPropValues = [
  {
    type: "default",
    layers: {},
  },
  {
    type: "boolean",
    propName: "checked",
    layers: {},
  },
];

const variantPropTypes = [
  {
    type: "boolean",
    propName: "checked",
  },
];

export const ToggleButtonContext = createContext(null);

function ToggleButton(_props) {
  const defaults = useContext(ToggleButtonContext);
  const props = { ...defaults, ..._props };
  const activeVariants = findSetVariantProps(variantPropTypes, props);
  const getCompositeDefaultProps = makeCompositeDefaultProps(
    defaultPropValues,
    activeVariants
  );
  return (
    <ToggleButtonRoot
      {...props}
      key="root"
      addSpacing={false}
      internal={{
        projectId: "7X7HTLRqyD",
        styles: styles,
        layerId: "root",
        scope: "Bw1sSJHFHP",
        activeVariants: activeVariants,
      }}
    >
      {(getStyle) => (
        <TextPrimitive
          id={"text_Qv4PXEzSwy"}
          className={
            "__visly_reset_7X7HTLRqyD __visly_scope_Bw1sSJHFHP_Qv4PXEzSwy"
          }
          key={"Qv4PXEzSwy"}
          text={
            exists(props.text) ? props.text : getStyle("Qv4PXEzSwy", "text")
          }
          element={getStyle("Qv4PXEzSwy", "htmlElement")}
        />
      )}
    </ToggleButtonRoot>
  );
}

ToggleButton.__variants = [
  {
    name: "checked",
    type: "variant",
  },
];

export default ToggleButton;
