// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* tslint:disable */
/* eslint-disable */
import "./textstyles/fonts.css";
import "./reset.css";
import "./Tabs.Button.css";
import React, { createContext, useContext } from "react";
import {
  exists,
  findSetVariantProps,
  makeCompositeDefaultProps,
} from "./_internal_utils";
import { SpacerPrimitive, TextPrimitive } from "./_internal_primitives";
import { RadioGroupButtonRoot } from "./_internal_radio_group";

const styles = [
  {
    type: "default",
    layers: {
      "segmented-control-button-text": {
        none: {
          text: "Tab name",
        },
      },
    },
  },
  {
    type: "boolean",
    propName: "selected",
    layers: {},
  },
  {
    type: "boolean",
    propName: "small",
    layers: {},
  },
];

const defaultPropValues = [
  {
    type: "default",
    layers: {},
  },
  {
    type: "boolean",
    propName: "selected",
    layers: {},
  },
  {
    type: "boolean",
    propName: "small",
    layers: {},
  },
];

const variantPropTypes = [
  {
    type: "boolean",
    propName: "selected",
  },
  {
    type: "boolean",
    propName: "small",
  },
];

export const ButtonContext = createContext(null);

function Button(_props) {
  const defaults = useContext(ButtonContext);
  const props = { ...defaults, ..._props };
  const activeVariants = findSetVariantProps(variantPropTypes, props);
  const getCompositeDefaultProps = makeCompositeDefaultProps(
    defaultPropValues,
    activeVariants
  );
  return (
    <RadioGroupButtonRoot
      {...props}
      key="segmented-control-button-root"
      addSpacing={false}
      internal={{
        projectId: "7X7HTLRqyD",
        styles: styles,
        layerId: "segmented-control-button-root",
        scope: "8qApQon9Xp",
        activeVariants: activeVariants,
      }}
    >
      {(getStyle) => (
        <>
          <TextPrimitive
            id={"text_segmented-control-button-text"}
            className={
              "__visly_reset_7X7HTLRqyD __visly_scope_8qApQon9Xp_segmented-control-button-text"
            }
            key={"segmented-control-button-text"}
            text={
              exists(props.text)
                ? props.text
                : getStyle("segmented-control-button-text", "text")
            }
            element={getStyle("segmented-control-button-text", "htmlElement")}
          />
          <SpacerPrimitive
            id={"Spacer_DtqcPdAYPg"}
            className={
              "__visly_reset_7X7HTLRqyD __visly_scope_8qApQon9Xp_DtqcPdAYPg"
            }
            key={"DtqcPdAYPg"}
          />
        </>
      )}
    </RadioGroupButtonRoot>
  );
}

Button.__variants = [
  {
    name: "selected",
    type: "variant",
  },
  {
    name: "small",
    type: "variant",
  },
];

export default Button;
