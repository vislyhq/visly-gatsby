// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* tslint:disable */
/* eslint-disable */
import "./textstyles/fonts.css";
import "./reset.css";
import "./Badge.css";
import React, { createContext, useContext } from "react";
import {
  exists,
  findSetVariantProps,
  makeCompositeDefaultProps,
} from "./_internal_utils";
import { RootPrimitive, TextPrimitive } from "./_internal_primitives";

const styles = [
  {
    type: "default",
    layers: {
      "98kaKZvitd": {
        none: {
          text: "Text",
        },
      },
    },
  },
  {
    type: "enum",
    propName: "kind",
    values: [
      {
        propValue: "primary",
        layers: {},
      },
      {
        propValue: "secondary",
        layers: {},
      },
      {
        propValue: "danger",
        layers: {},
      },
      {
        propValue: "warning",
        layers: {},
      },
    ],
  },
];

const defaultPropValues = [
  {
    type: "default",
    layers: {},
  },
  {
    type: "enum",
    propName: "kind",
    values: [
      {
        propValue: "primary",
        layers: {},
      },
      {
        propValue: "secondary",
        layers: {},
      },
      {
        propValue: "danger",
        layers: {},
      },
      {
        propValue: "warning",
        layers: {},
      },
    ],
  },
];

const variantPropTypes = [
  {
    type: "enum",
    propName: "kind",
    propValues: ["primary", "secondary", "danger", "warning"],
  },
];

export const BadgeContext = createContext(null);

function Badge(_props) {
  const defaults = useContext(BadgeContext);
  const props = { ...defaults, ..._props };
  const activeVariants = findSetVariantProps(variantPropTypes, props);
  const getCompositeDefaultProps = makeCompositeDefaultProps(
    defaultPropValues,
    activeVariants
  );
  return (
    <RootPrimitive
      {...props}
      key="HCb91eiUZn"
      addSpacing={false}
      internal={{
        projectId: "7X7HTLRqyD",
        styles: styles,
        layerId: "HCb91eiUZn",
        scope: "3sBeXgUGmK",
        activeVariants: activeVariants,
      }}
    >
      {(getStyle) => (
        <TextPrimitive
          id={"Text_98kaKZvitd"}
          className={
            "__visly_reset_7X7HTLRqyD __visly_scope_3sBeXgUGmK_98kaKZvitd"
          }
          key={"98kaKZvitd"}
          text={
            exists(props.text) ? props.text : getStyle("98kaKZvitd", "text")
          }
          element={getStyle("98kaKZvitd", "htmlElement")}
        />
      )}
    </RootPrimitive>
  );
}

Badge.__variants = [
  {
    name: "kind",
    type: "group",
    variants: ["primary", "secondary", "danger", "warning"],
  },
];

export default Badge;
