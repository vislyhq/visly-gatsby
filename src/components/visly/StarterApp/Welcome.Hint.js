// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* tslint:disable */
/* eslint-disable */
import "../textstyles/fonts.css";
import "../reset.css";
import "./Welcome.Hint.css";
import React, { createContext, useContext } from "react";
import {
  exists,
  findSetVariantProps,
  makeCompositeDefaultProps,
} from "../_internal_utils";
import {
  RootPrimitive,
  SpacerPrimitive,
  TextPrimitive,
  ContainerPrimitive,
  IconPrimitive,
} from "../_internal_primitives";
import * as icons from "../icons";

const styles = [
  {
    type: "default",
    layers: {
      "9TpGBrJ7qN": {
        none: {
          text: "Hint text",
        },
      },
      RSuCY4pgJn: {
        none: {
          icon: icons.heart,
          useMask: true,
        },
      },
      XkHRLB4gsW: {
        none: {
          icon: icons.externalLink,
          useMask: true,
        },
      },
    },
  },
];

const defaultPropValues = [
  {
    type: "default",
    layers: {},
  },
];

const variantPropTypes = [];

export const HintContext = createContext(null);

function Hint(_props) {
  const defaults = useContext(HintContext);
  const props = { ...defaults, ..._props };
  const activeVariants = findSetVariantProps(variantPropTypes, props);
  const getCompositeDefaultProps = makeCompositeDefaultProps(
    defaultPropValues,
    activeVariants
  );
  return (
    <RootPrimitive
      {...props}
      key="EwbzXFQ94w"
      addSpacing={false}
      internal={{
        projectId: "7X7HTLRqyD",
        styles: styles,
        layerId: "EwbzXFQ94w",
        scope: "6rGRm3nbkZ",
        activeVariants: activeVariants,
      }}
    >
      {(getStyle) => (
        <>
          <ContainerPrimitive
            id={"image_LsatHHLZDx"}
            className={
              "__visly_reset_7X7HTLRqyD __visly_scope_6rGRm3nbkZ_LsatHHLZDx"
            }
            key={"LsatHHLZDx"}
            addSpacing={false}
            element={getStyle("LsatHHLZDx", "htmlElement")}
          >
            {
              <IconPrimitive
                id={"Icon_RSuCY4pgJn"}
                className={
                  "__visly_reset_7X7HTLRqyD __visly_scope_6rGRm3nbkZ_RSuCY4pgJn"
                }
                key={"RSuCY4pgJn"}
                useMask={getStyle("RSuCY4pgJn", "useMask")}
                src={
                  exists(props.icon)
                    ? props.icon
                    : getStyle("RSuCY4pgJn", "icon")
                }
              />
            }
          </ContainerPrimitive>
          <SpacerPrimitive
            id={"Spacer_DecpCb4Xth"}
            className={
              "__visly_reset_7X7HTLRqyD __visly_scope_6rGRm3nbkZ_DecpCb4Xth"
            }
            key={"DecpCb4Xth"}
          />
          <TextPrimitive
            id={"Text_9TpGBrJ7qN"}
            className={
              "__visly_reset_7X7HTLRqyD __visly_scope_6rGRm3nbkZ_9TpGBrJ7qN"
            }
            key={"9TpGBrJ7qN"}
            text={
              exists(props.text) ? props.text : getStyle("9TpGBrJ7qN", "text")
            }
            element={getStyle("9TpGBrJ7qN", "htmlElement")}
          />
          <SpacerPrimitive
            id={"Spacer_fDPZaapBV2"}
            className={
              "__visly_reset_7X7HTLRqyD __visly_scope_6rGRm3nbkZ_fDPZaapBV2"
            }
            key={"fDPZaapBV2"}
          />
          <ContainerPrimitive
            id={"hoverIcon_3w41kLctWX"}
            className={
              "__visly_reset_7X7HTLRqyD __visly_scope_6rGRm3nbkZ_3w41kLctWX"
            }
            key={"3w41kLctWX"}
            addSpacing={false}
            element={getStyle("3w41kLctWX", "htmlElement")}
          >
            {
              <IconPrimitive
                id={"Icon_XkHRLB4gsW"}
                className={
                  "__visly_reset_7X7HTLRqyD __visly_scope_6rGRm3nbkZ_XkHRLB4gsW"
                }
                key={"XkHRLB4gsW"}
                useMask={getStyle("XkHRLB4gsW", "useMask")}
                src={getStyle("XkHRLB4gsW", "icon")}
              />
            }
          </ContainerPrimitive>
        </>
      )}
    </RootPrimitive>
  );
}

Hint.__variants = [];

export default Hint;
